{"version":3,"sources":["../src/app/pages/ops/insights/page.tsx","../src/app/pages/ops/contracts/form.tsx","../src/app/pages/ops/contracts/page.tsx","../src/app/pages/ops/people/page.tsx","../src/app/pages/ops/performance/page.tsx","../src/app/pages/exe/value-streams/page.tsx","../src/app/pages/exe/my-tickets/page.tsx","../src/app/pages/services/ServicesHub.tsx","../src/app/pages/work/WorkDashboard.tsx","../src/config.json","../src/app/pages/index.ts","../src/index.ts"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCaptify } from \"@captify-io/platform/hooks\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@captify-io/platform/ui\";\n\nexport function IntelligencePage() {\n  const { session } = useCaptify();\n  const [insights, setInsights] = useState([]);\n  const [predictions, setPredictions] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [queryResult, setQueryResult] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadIntelligenceData();\n  }, []);\n\n  const loadIntelligenceData = async () => {\n    try {\n      // Load insights\n      const insightsResponse = await apiClient.run({\n        service: \"intelligence\",\n        operation: \"getInsights\",\n        data: {},\n      });\n      setInsights(insightsResponse.data || []);\n\n      // Load predictions\n      const predictionsResponse = await apiClient.run({\n        service: \"intelligence\",\n        operation: \"generatePredictions\",\n        data: { horizon: 90 },\n      });\n      setPredictions(predictionsResponse.data || []);\n\n      // Load recommendations\n      const recommendationsResponse = await apiClient.run({\n        service: \"intelligence\",\n        operation: \"getRecommendations\",\n        data: {},\n      });\n      setRecommendations(recommendationsResponse.data || []);\n    } catch (error) {\n      console.error(\"Failed to load intelligence data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleQuery = async () => {\n    if (!query.trim()) return;\n\n    try {\n      const response = await apiClient.run({\n        service: \"intelligence\",\n        operation: \"processQuery\",\n        data: { query },\n      });\n      setQueryResult(response.data);\n    } catch (error) {\n      console.error(\"Failed to process query:\", error);\n    }\n  };\n\n  const getInsightTypeColor = (type: string) => {\n    switch (type) {\n      case \"positive\":\n        return \"text-green-600\";\n      case \"warning\":\n        return \"text-yellow-600\";\n      case \"negative\":\n        return \"text-red-600\";\n      default:\n        return \"text-blue-600\";\n    }\n  };\n\n  const getPriorityColor = (priority: string) => {\n    switch (priority) {\n      case \"critical\":\n        return \"border-red-500 bg-red-50\";\n      case \"high\":\n        return \"border-orange-500 bg-orange-50\";\n      case \"medium\":\n        return \"border-yellow-500 bg-yellow-50\";\n      default:\n        return \"border-blue-500 bg-blue-50\";\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold mb-6\">AI Intelligence</h1>\n\n      {/* AI Query Interface */}\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <CardTitle>Ask the AI</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex gap-2\">\n            <input\n              type=\"text\"\n              value={query}\n              onChange={(e) => setQuery(e.target.value)}\n              placeholder=\"Ask about your business performance, risks, or opportunities...\"\n              className=\"flex-1 px-3 py-2 border rounded-md\"\n              onKeyPress={(e) => e.key === \"Enter\" && handleQuery()}\n            />\n            <button\n              onClick={handleQuery}\n              className=\"px-4 py-2 bg-blue-600 text-white rounded-md hover:bg-blue-700\"\n            >\n              Ask\n            </button>\n          </div>\n          {queryResult && (\n            <div className=\"mt-4 p-4 bg-gray-50 rounded-md\">\n              <p className=\"font-medium\">Answer:</p>\n              <p>{queryResult.response}</p>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                Confidence: {Math.round((queryResult.confidence || 0) * 100)}%\n              </p>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Key Insights */}\n      <Card className=\"mb-6\">\n        <CardHeader>\n          <CardTitle>Latest Insights</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <p>Loading insights...</p>\n          ) : insights.length > 0 ? (\n            <div className=\"space-y-4\">\n              {insights.map((insight: any) => (\n                <div\n                  key={insight.id}\n                  className=\"border-l-4 border-blue-500 pl-4\"\n                >\n                  <div className=\"flex justify-between items-start\">\n                    <h3\n                      className={`font-semibold ${getInsightTypeColor(\n                        insight.type\n                      )}`}\n                    >\n                      {insight.title}\n                    </h3>\n                    <span className=\"text-xs bg-gray-200 px-2 py-1 rounded\">\n                      {insight.category}\n                    </span>\n                  </div>\n                  <p className=\"text-sm text-muted-foreground mt-1\">\n                    {insight.description}\n                  </p>\n                  <p className=\"text-xs text-muted-foreground mt-2\">\n                    Confidence: {Math.round((insight.confidence || 0) * 100)}% •\n                    Impact: {insight.impact}\n                  </p>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p>No insights available</p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Predictions */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Predictions</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {loading ? (\n              <p>Loading predictions...</p>\n            ) : predictions.length > 0 ? (\n              <div className=\"space-y-4\">\n                {predictions.map((prediction: any) => (\n                  <div key={prediction.id} className=\"p-3 border rounded-lg\">\n                    <h4 className=\"font-medium\">{prediction.metric}</h4>\n                    <div className=\"flex justify-between mt-2\">\n                      <span className=\"text-sm\">Current:</span>\n                      <span className=\"font-medium\">\n                        {typeof prediction.currentValue === \"number\"\n                          ? prediction.currentValue.toLocaleString()\n                          : prediction.currentValue}\n                      </span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-sm\">Predicted:</span>\n                      <span className=\"font-medium text-blue-600\">\n                        {typeof prediction.predictedValue === \"number\"\n                          ? prediction.predictedValue.toLocaleString()\n                          : prediction.predictedValue}\n                      </span>\n                    </div>\n                    <p className=\"text-xs text-muted-foreground mt-2\">\n                      {Math.round((prediction.confidence || 0) * 100)}%\n                      confidence • {prediction.horizon} days\n                    </p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No predictions available</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Recommendations</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {loading ? (\n              <p>Loading recommendations...</p>\n            ) : recommendations.length > 0 ? (\n              <div className=\"space-y-4\">\n                {recommendations.map((rec: any) => (\n                  <div\n                    key={rec.id}\n                    className={`p-3 border-l-4 rounded ${getPriorityColor(\n                      rec.priority\n                    )}`}\n                  >\n                    <div className=\"flex justify-between items-start\">\n                      <h4 className=\"font-medium\">{rec.title}</h4>\n                      <span\n                        className={`text-xs px-2 py-1 rounded ${\n                          rec.priority === \"critical\"\n                            ? \"bg-red-200 text-red-800\"\n                            : rec.priority === \"high\"\n                            ? \"bg-orange-200 text-orange-800\"\n                            : rec.priority === \"medium\"\n                            ? \"bg-yellow-200 text-yellow-800\"\n                            : \"bg-blue-200 text-blue-800\"\n                        }`}\n                      >\n                        {rec.priority}\n                      </span>\n                    </div>\n                    <p className=\"text-sm mt-1\">{rec.description}</p>\n                    <p className=\"text-sm font-medium mt-2\">\n                      Action: {rec.action}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      Impact: {rec.impact} • Effort: {rec.effort}\n                    </p>\n                  </div>\n                ))}\n              </div>\n            ) : (\n              <p>No recommendations available</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  );\n}\n\n// CRITICAL: Must have default export for dynamic imports\nexport default IntelligencePage;\n","\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport { cn } from \"@captify-io/platform/utils\";\nimport {\n  Button,\n  Input,\n  Label,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Textarea,\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n  Command,\n  CommandEmpty,\n  CommandGroup,\n  CommandInput,\n  CommandItem,\n  CommandList,\n  DynamicIcon,\n} from \"@captify-io/platform/ui\";\nimport type { Contract } from \"@/types/contract\";\n\ninterface ContractFormProps {\n  contract?: Partial<Contract>;\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (contract: Partial<Contract>) => Promise<void>;\n}\n\nexport function ContractForm({\n  contract,\n  isOpen,\n  onClose,\n  onSave,\n}: ContractFormProps) {\n  // Create default initial values for a new contract\n  const getInitialFormData = (): Partial<Contract> => {\n    // Always use the passed contract data when provided\n    if (contract) return { ...contract };\n\n    const today = new Date().toISOString().split(\"T\")[0];\n    const oneYearFromNow = new Date(Date.now() + 365 * 24 * 60 * 60 * 1000)\n      .toISOString()\n      .split(\"T\")[0];\n\n    return {\n      type: \"FFP\",\n      status: \"pre-award\",\n      contractNumber: \"\",\n      name: \"\",\n      customer: \"\",\n      agency: \"\",\n\n      // Financial defaults\n      awardAmount: 0,\n      awardDate: today,\n      totalValue: 0,\n      fundedValue: 0,\n      burnedValue: 0,\n      remainingValue: 0,\n      monthlyBurnRate: 0,\n      avgMonthlyBurn: 0,\n\n      // Schedule defaults\n      startDate: today,\n      endDate: oneYearFromNow,\n      popStart: today,\n      popEnd: oneYearFromNow,\n      popMonths: 12,\n\n      // Cost breakdown defaults\n      budgetedCosts: {\n        direct: 0,\n        indirect: 0,\n        materials: 0,\n        subcontracts: 0,\n        profit: 0,\n        total: 0,\n      },\n      expendedCosts: {\n        direct: 0,\n        indirect: 0,\n        materials: 0,\n        subcontracts: 0,\n        profit: 0,\n        total: 0,\n      },\n\n      // Team defaults\n      programManager: \"\",\n      technicalLead: \"\",\n      contractingOfficer: \"\",\n      contractingOfficerRep: \"\",\n      teams: [],\n\n      // Other defaults\n      healthScore: 100,\n      risks: [],\n      cdrls: [],\n      milestones: [],\n      laborCategories: [],\n      indirectRate: 0,\n      proposalSubmitted: false,\n    };\n  };\n\n  const [formData, setFormData] = useState<Partial<Contract>>(\n    getInitialFormData()\n  );\n  const [loading, setLoading] = useState(false);\n  const [activeTab, setActiveTab] = useState(\"info\");\n\n  // Dropdown data states\n  const [customers, setCustomers] = useState<string[]>([\n    \"Department of Defense\",\n    \"Department of State\",\n    \"DHS\",\n    \"NASA\",\n    \"EPA\",\n  ]);\n  const [agencies, setAgencies] = useState<string[]>([\n    \"DISA\",\n    \"USCIS\",\n    \"CBP\",\n    \"CISA\",\n    \"SPAWAR\",\n  ]);\n  const [users, setUsers] = useState<any[]>([]);\n\n  // Dropdown open states\n  const [customerOpen, setCustomerOpen] = useState(false);\n  const [agencyOpen, setAgencyOpen] = useState(false);\n  const [newCustomer, setNewCustomer] = useState(\"\");\n  const [newAgency, setNewAgency] = useState(\"\");\n\n  useEffect(() => {\n    loadDropdownData();\n  }, []);\n\n  const loadDropdownData = async () => {\n    try {\n      // Load users from the database\n      const usersRes = await apiClient.run({\n        service: \"user\",\n        operation: \"listUsers\",\n      });\n      setUsers(usersRes?.data || []);\n    } catch (error) {\n      console.log(\"Error loading dropdown data:\", error);\n    }\n  };\n\n  const handleInputChange = (field: string, value: any) => {\n    setFormData((prev) => ({\n      ...prev,\n      [field]: value,\n    }));\n  };\n\n  const handleCostChange = (\n    costType: \"budgetedCosts\" | \"expendedCosts\",\n    field: string,\n    value: number\n  ) => {\n    setFormData((prev) => {\n      const costs = { ...prev[costType] };\n      costs[field] = value;\n      costs.total =\n        costs.direct +\n        costs.indirect +\n        costs.materials +\n        costs.subcontracts +\n        costs.profit;\n      return {\n        ...prev,\n        [costType]: costs,\n      };\n    });\n  };\n\n  const handleSubmit = async () => {\n    setLoading(true);\n    try {\n      // Prepare the form data with calculated fields\n      const submitData = { ...formData };\n\n      // Calculate average monthly burn if we have dates and expended total\n      if (submitData.startDate && submitData.expendedCosts?.total) {\n        const start = new Date(submitData.startDate);\n        const now = new Date();\n        const monthsElapsed =\n          (now.getFullYear() - start.getFullYear()) * 12 +\n          (now.getMonth() - start.getMonth()) +\n          1;\n        submitData.avgMonthlyBurn =\n          submitData.expendedCosts.total / monthsElapsed;\n      }\n\n      // Calculate remaining value if not set\n      if (submitData.totalValue && submitData.burnedValue !== undefined) {\n        submitData.remainingValue =\n          submitData.totalValue - (submitData.burnedValue || 0);\n      }\n\n      // Set burnedValue to expendedCosts.total if available\n      if (submitData.expendedCosts?.total && !submitData.burnedValue) {\n        submitData.burnedValue = submitData.expendedCosts.total;\n      }\n\n      await onSave(submitData);\n      onClose();\n    } catch (error) {\n      console.error(\"Failed to save contract:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"max-w-6xl\">\n      <div className=\"flex justify-between items-center mb-6\">\n        <h2 className=\"text-2xl font-bold\">\n          {contract?.id && contract?.name ? \"Edit Contract\" : \"New Contract\"}\n        </h2>\n      </div>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab}>\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"info\">Info</TabsTrigger>\n          <TabsTrigger value=\"financial\">Financial</TabsTrigger>\n          <TabsTrigger value=\"costs\">Cost Breakdown</TabsTrigger>\n          <TabsTrigger value=\"team\">Team</TabsTrigger>\n          <TabsTrigger value=\"documents\">Documents</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"info\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"contractNumber\">Contract Number*</Label>\n              <Input\n                id=\"contractNumber\"\n                value={formData.contractNumber || \"\"}\n                onChange={(e) =>\n                  handleInputChange(\"contractNumber\", e.target.value)\n                }\n                placeholder=\"e.g., W15P7T-20-C-0001\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"name\">Contract Name*</Label>\n              <Input\n                id=\"name\"\n                value={formData.name || \"\"}\n                onChange={(e) => handleInputChange(\"name\", e.target.value)}\n                placeholder=\"e.g., IT Support Services\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"type\">Contract Type*</Label>\n              <Select\n                value={formData.type || \"FFP\"}\n                onValueChange={(value) => handleInputChange(\"type\", value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select type\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"FFP\">FFP - Firm Fixed Price</SelectItem>\n                  <SelectItem value=\"CPFF\">\n                    CPFF - Cost Plus Fixed Fee\n                  </SelectItem>\n                  <SelectItem value=\"CPIF\">\n                    CPIF - Cost Plus Incentive Fee\n                  </SelectItem>\n                  <SelectItem value=\"T&M\">T&M - Time & Materials</SelectItem>\n                  <SelectItem value=\"IDIQ\">\n                    IDIQ - Indefinite Delivery/Quantity\n                  </SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"status\">Status*</Label>\n              <Select\n                value={formData.status || \"pre-award\"}\n                onValueChange={(value) => handleInputChange(\"status\", value)}\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select status\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"pre-award\">Pre-Award</SelectItem>\n                  <SelectItem value=\"active\">Active</SelectItem>\n                  <SelectItem value=\"option-pending\">Option Pending</SelectItem>\n                  <SelectItem value=\"closing\">Closing</SelectItem>\n                  <SelectItem value=\"closed\">Closed</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"customer\">Customer*</Label>\n              <Popover open={customerOpen} onOpenChange={setCustomerOpen}>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    role=\"combobox\"\n                    aria-expanded={customerOpen}\n                    className=\"w-full justify-between\"\n                  >\n                    {formData.customer || \"Select customer...\"}\n                    <DynamicIcon\n                      name=\"chevrons-up-down\"\n                      className=\"ml-2 h-4 w-4 shrink-0 opacity-50\"\n                    />\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-full p-0\">\n                  <Command>\n                    <CommandInput\n                      placeholder=\"Search or add customer...\"\n                      value={newCustomer}\n                      onValueChange={setNewCustomer}\n                    />\n                    <CommandList>\n                      <CommandEmpty>\n                        <Button\n                          variant=\"ghost\"\n                          className=\"w-full justify-start\"\n                          onClick={() => {\n                            if (newCustomer) {\n                              setCustomers([...customers, newCustomer]);\n                              handleInputChange(\"customer\", newCustomer);\n                              setCustomerOpen(false);\n                              setNewCustomer(\"\");\n                            }\n                          }}\n                        >\n                          <DynamicIcon name=\"plus\" className=\"mr-2 h-4 w-4\" />\n                          Add \"{newCustomer}\"\n                        </Button>\n                      </CommandEmpty>\n                      <CommandGroup>\n                        {customers.map((customer) => (\n                          <CommandItem\n                            key={customer}\n                            onSelect={() => {\n                              handleInputChange(\"customer\", customer);\n                              setCustomerOpen(false);\n                            }}\n                          >\n                            <DynamicIcon\n                              name=\"check\"\n                              className={cn(\n                                \"mr-2 h-4 w-4\",\n                                formData.customer === customer\n                                  ? \"opacity-100\"\n                                  : \"opacity-0\"\n                              )}\n                            />\n                            {customer}\n                          </CommandItem>\n                        ))}\n                      </CommandGroup>\n                    </CommandList>\n                  </Command>\n                </PopoverContent>\n              </Popover>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"agency\">Agency</Label>\n              <Popover open={agencyOpen} onOpenChange={setAgencyOpen}>\n                <PopoverTrigger asChild>\n                  <Button\n                    variant=\"outline\"\n                    role=\"combobox\"\n                    aria-expanded={agencyOpen}\n                    className=\"w-full justify-between\"\n                  >\n                    {formData.agency || \"Select agency...\"}\n                    <DynamicIcon\n                      name=\"chevrons-up-down\"\n                      className=\"ml-2 h-4 w-4 shrink-0 opacity-50\"\n                    />\n                  </Button>\n                </PopoverTrigger>\n                <PopoverContent className=\"w-full p-0\">\n                  <Command>\n                    <CommandInput\n                      placeholder=\"Search or add agency...\"\n                      value={newAgency}\n                      onValueChange={setNewAgency}\n                    />\n                    <CommandList>\n                      <CommandEmpty>\n                        <Button\n                          variant=\"ghost\"\n                          className=\"w-full justify-start\"\n                          onClick={() => {\n                            if (newAgency) {\n                              setAgencies([...agencies, newAgency]);\n                              handleInputChange(\"agency\", newAgency);\n                              setAgencyOpen(false);\n                              setNewAgency(\"\");\n                            }\n                          }}\n                        >\n                          <DynamicIcon name=\"plus\" className=\"mr-2 h-4 w-4\" />\n                          Add \"{newAgency}\"\n                        </Button>\n                      </CommandEmpty>\n                      <CommandGroup>\n                        {agencies.map((agency) => (\n                          <CommandItem\n                            key={agency}\n                            onSelect={() => {\n                              handleInputChange(\"agency\", agency);\n                              setAgencyOpen(false);\n                            }}\n                          >\n                            <DynamicIcon\n                              name=\"check\"\n                              className={cn(\n                                \"mr-2 h-4 w-4\",\n                                formData.agency === agency\n                                  ? \"opacity-100\"\n                                  : \"opacity-0\"\n                              )}\n                            />\n                            {agency}\n                          </CommandItem>\n                        ))}\n                      </CommandGroup>\n                    </CommandList>\n                  </Command>\n                </PopoverContent>\n              </Popover>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"startDate\">Start Date*</Label>\n              <Input\n                id=\"startDate\"\n                type=\"date\"\n                value={formData.startDate || \"\"}\n                onChange={(e) => {\n                  handleInputChange(\"startDate\", e.target.value);\n                  handleInputChange(\"popStart\", e.target.value);\n                  // Calculate end date based on POP months if set\n                  const popMonths = formData.popMonths || 12;\n                  const startDate = new Date(e.target.value);\n                  const endDate = new Date(startDate);\n                  endDate.setMonth(endDate.getMonth() + Number(popMonths));\n                  handleInputChange(\n                    \"endDate\",\n                    endDate.toISOString().split(\"T\")[0]\n                  );\n                  handleInputChange(\n                    \"popEnd\",\n                    endDate.toISOString().split(\"T\")[0]\n                  );\n                }}\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"popMonths\">POP (months)*</Label>\n              <Input\n                id=\"popMonths\"\n                type=\"number\"\n                value={formData.popMonths || 12}\n                onChange={(e) => {\n                  const months = parseInt(e.target.value) || 12;\n                  handleInputChange(\"popMonths\", months);\n                  // Calculate end date based on start date\n                  if (formData.startDate) {\n                    const startDate = new Date(formData.startDate);\n                    const endDate = new Date(startDate);\n                    endDate.setMonth(endDate.getMonth() + months);\n                    handleInputChange(\n                      \"endDate\",\n                      endDate.toISOString().split(\"T\")[0]\n                    );\n                    handleInputChange(\n                      \"popEnd\",\n                      endDate.toISOString().split(\"T\")[0]\n                    );\n                  }\n                }}\n                placeholder=\"12\"\n                required\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"awardAmount\">Award Amount*</Label>\n              <Input\n                id=\"awardAmount\"\n                type=\"number\"\n                value={formData.awardAmount || \"\"}\n                onChange={(e) => {\n                  const amount = parseFloat(e.target.value) || 0;\n                  handleInputChange(\"awardAmount\", amount);\n                  // Also set totalValue and fundedValue if not already set\n                  if (!formData.totalValue || formData.totalValue === 0) {\n                    handleInputChange(\"totalValue\", amount);\n                  }\n                  if (!formData.fundedValue || formData.fundedValue === 0) {\n                    handleInputChange(\"fundedValue\", amount);\n                  }\n                }}\n                placeholder=\"0.00\"\n                required\n              />\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"financial\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"totalValue\">Total Contract Value</Label>\n              <Input\n                id=\"totalValue\"\n                type=\"number\"\n                value={formData.totalValue || \"\"}\n                onChange={(e) =>\n                  handleInputChange(\"totalValue\", parseFloat(e.target.value))\n                }\n                placeholder=\"0.00\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"fundedValue\">Funded Value</Label>\n              <Input\n                id=\"fundedValue\"\n                type=\"number\"\n                value={formData.fundedValue || \"\"}\n                onChange={(e) =>\n                  handleInputChange(\"fundedValue\", parseFloat(e.target.value))\n                }\n                placeholder=\"0.00\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"avgMonthlyBurn\">Average Monthly Burn</Label>\n              <Input\n                id=\"avgMonthlyBurn\"\n                type=\"number\"\n                value={formData.avgMonthlyBurn || \"\"}\n                onChange={(e) =>\n                  handleInputChange(\n                    \"avgMonthlyBurn\",\n                    parseFloat(e.target.value)\n                  )\n                }\n                placeholder=\"0.00\"\n              />\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"indirectRate\">Indirect Rate (%)</Label>\n              <Input\n                id=\"indirectRate\"\n                type=\"number\"\n                value={formData.indirectRate || \"\"}\n                onChange={(e) =>\n                  handleInputChange(\"indirectRate\", parseFloat(e.target.value))\n                }\n                placeholder=\"0\"\n              />\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"costs\" className=\"space-y-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Budgeted Costs</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label>Direct Costs</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.budgetedCosts?.direct || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"budgetedCosts\",\n                        \"direct\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Indirect Costs</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.budgetedCosts?.indirect || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"budgetedCosts\",\n                        \"indirect\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Materials</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.budgetedCosts?.materials || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"budgetedCosts\",\n                        \"materials\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Subcontracts</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.budgetedCosts?.subcontracts || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"budgetedCosts\",\n                        \"subcontracts\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Profit/Fee</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.budgetedCosts?.profit || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"budgetedCosts\",\n                        \"profit\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Total Budgeted</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.budgetedCosts?.total || 0}\n                    disabled\n                    className=\"font-bold\"\n                  />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Expended Costs</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"space-y-2\">\n                  <Label>Direct Costs</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.expendedCosts?.direct || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"expendedCosts\",\n                        \"direct\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Indirect Costs</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.expendedCosts?.indirect || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"expendedCosts\",\n                        \"indirect\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Materials</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.expendedCosts?.materials || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"expendedCosts\",\n                        \"materials\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Subcontracts</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.expendedCosts?.subcontracts || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"expendedCosts\",\n                        \"subcontracts\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Profit/Fee</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.expendedCosts?.profit || 0}\n                    onChange={(e) =>\n                      handleCostChange(\n                        \"expendedCosts\",\n                        \"profit\",\n                        parseFloat(e.target.value) || 0\n                      )\n                    }\n                  />\n                </div>\n                <div className=\"space-y-2\">\n                  <Label>Total Expended</Label>\n                  <Input\n                    type=\"number\"\n                    value={formData.expendedCosts?.total || 0}\n                    disabled\n                    className=\"font-bold\"\n                  />\n                </div>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"team\" className=\"space-y-4\">\n          <div className=\"grid grid-cols-2 gap-4\">\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"programManager\">Program Manager*</Label>\n              <Select\n                value={formData.programManager || \"\"}\n                onValueChange={(value) =>\n                  handleInputChange(\"programManager\", value)\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select Program Manager\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {users.length > 0 ? (\n                    users.map((user) => (\n                      <SelectItem\n                        key={user.id || user.email}\n                        value={user.email}\n                      >\n                        {user.name || user.email}\n                      </SelectItem>\n                    ))\n                  ) : (\n                    <SelectItem value=\"john.doe@example.com\">\n                      John Doe\n                    </SelectItem>\n                  )}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"technicalLead\">Technical Lead</Label>\n              <Select\n                value={formData.technicalLead || \"\"}\n                onValueChange={(value) =>\n                  handleInputChange(\"technicalLead\", value)\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select Technical Lead\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {users.length > 0 ? (\n                    users.map((user) => (\n                      <SelectItem\n                        key={user.id || user.email}\n                        value={user.email}\n                      >\n                        {user.name || user.email}\n                      </SelectItem>\n                    ))\n                  ) : (\n                    <SelectItem value=\"jane.smith@example.com\">\n                      Jane Smith\n                    </SelectItem>\n                  )}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"contractingOfficer\">Contracting Officer</Label>\n              <Select\n                value={formData.contractingOfficer || \"\"}\n                onValueChange={(value) =>\n                  handleInputChange(\"contractingOfficer\", value)\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select Contracting Officer\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {users.length > 0 ? (\n                    users.map((user) => (\n                      <SelectItem\n                        key={user.id || user.email}\n                        value={user.email}\n                      >\n                        {user.name || user.email}\n                      </SelectItem>\n                    ))\n                  ) : (\n                    <SelectItem value=\"co@agency.gov\">CO Name</SelectItem>\n                  )}\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div className=\"space-y-2\">\n              <Label htmlFor=\"contractingOfficerRep\">\n                Contracting Officer Representative (COR)\n              </Label>\n              <Select\n                value={formData.contractingOfficerRep || \"\"}\n                onValueChange={(value) =>\n                  handleInputChange(\"contractingOfficerRep\", value)\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue placeholder=\"Select COR\" />\n                </SelectTrigger>\n                <SelectContent>\n                  {users.length > 0 ? (\n                    users.map((user) => (\n                      <SelectItem\n                        key={user.id || user.email}\n                        value={user.email}\n                      >\n                        {user.name || user.email}\n                      </SelectItem>\n                    ))\n                  ) : (\n                    <SelectItem value=\"cor@agency.gov\">COR Name</SelectItem>\n                  )}\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n        </TabsContent>\n\n        <TabsContent value=\"documents\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Contract Documents</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"border-2 border-dashed border-gray-300 rounded-lg p-8 text-center\">\n                <DynamicIcon\n                  name=\"upload\"\n                  className=\"mx-auto h-12 w-12 text-gray-400\"\n                />\n                <p className=\"mt-2 text-sm text-gray-600 font-semibold\">\n                  Document Upload Coming Soon\n                </p>\n                <p className=\"mt-1 text-xs text-gray-500\">\n                  Documents will be stored in S3 and accessible to the AI agent\n                </p>\n                <p className=\"mt-3 text-xs text-gray-400\">\n                  Supported formats: PDF, Word, Excel, PowerPoint\n                </p>\n              </div>\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      <div className=\"flex justify-end gap-2 mt-6\">\n        <Button variant=\"outline\" onClick={onClose} disabled={loading}>\n          Cancel\n        </Button>\n        <Button onClick={handleSubmit} disabled={loading}>\n          {loading ? \"Saving...\" : \"Save Contract\"}\n        </Button>\n      </div>\n    </div>\n  );\n}\n","\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport { useCaptify } from \"@captify-io/platform/hooks\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Button,\n  Progress,\n  Alert,\n  AlertDescription,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n  DynamicIcon,\n} from \"@captify-io/platform/ui\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { ContractForm } from \"./form\";\n\nexport function ContractsPage() {\n  const { session } = useCaptify();\n  const [contracts, setContracts] = useState<any[]>([]);\n  const [selectedContract, setSelectedContract] = useState<any>(null);\n  const [contractDetails, setContractDetails] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [isFormOpen, setIsFormOpen] = useState(false);\n  const [editingContract, setEditingContract] = useState<any>(null);\n  const [filter, setFilter] = useState<\"all\" | \"active\" | \"archived\">(\"active\");\n  const [viewMode, setViewMode] = useState<\"list\" | \"form\">(\"list\");\n\n  useEffect(() => {\n    loadContracts();\n  }, []);\n\n  useEffect(() => {\n    if (selectedContract) {\n      loadContractDetails(selectedContract.id);\n    }\n  }, [selectedContract]);\n\n  const loadContracts = async () => {\n    try {\n      // Removed access check - all users can view contracts during development\n      const response = await apiClient.run({\n        service: \"contract\",\n        operation: \"getActiveContracts\",\n        app: \"pmbook\",\n      });\n\n      const data = response?.data || [];\n      setContracts(data); // Use 'data' instead of 'response?.data' to ensure we always set an array\n      if (data.length > 0) {\n        setSelectedContract(data[0]);\n      }\n    } catch (error) {\n      console.error(\"Failed to load contracts:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadContractDetails = async (contractId: string) => {\n    try {\n      const [burn, cdrls, milestones, profitability] = await Promise.all([\n        apiClient.run({\n          service: \"contract\",\n          operation: \"getContractBurn\",\n          data: { contractId },\n          app: \"pmbook\",\n        }),\n        apiClient.run({\n          service: \"contract\",\n          operation: \"getCDRLStatus\",\n          data: { contractId },\n          app: \"pmbook\",\n        }),\n        apiClient.run({\n          service: \"contract\",\n          operation: \"getMilestoneProgress\",\n          data: { contractId },\n          app: \"pmbook\",\n        }),\n        apiClient.run({\n          service: \"contract\",\n          operation: \"calculateProfitability\",\n          data: { contractId },\n          app: \"pmbook\",\n        }),\n      ]);\n\n      setContractDetails({ burn, cdrls, milestones, profitability });\n    } catch (error) {\n      console.error(\"Failed to load contract details:\", error);\n    }\n  };\n\n  const handleAddContract = () => {\n    const newContract = {\n      id: uuidv4(),\n      type: \"FFP\",\n      status: \"pre-award\",\n      contractNumber: \"\",\n      name: \"\",\n      customer: \"\",\n      agency: \"\",\n      awardAmount: 0,\n      awardDate: new Date().toISOString().split(\"T\")[0],\n      totalValue: 0,\n      fundedValue: 0,\n      burnedValue: 0,\n      remainingValue: 0,\n      monthlyBurnRate: 0,\n      avgMonthlyBurn: 0,\n      startDate: new Date().toISOString().split(\"T\")[0],\n      endDate: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split(\"T\")[0],\n      popStart: new Date().toISOString().split(\"T\")[0],\n      popEnd: new Date(Date.now() + 365 * 24 * 60 * 60 * 1000)\n        .toISOString()\n        .split(\"T\")[0],\n      budgetedCosts: {\n        direct: 0,\n        indirect: 0,\n        materials: 0,\n        subcontracts: 0,\n        profit: 0,\n        total: 0,\n      },\n      expendedCosts: {\n        direct: 0,\n        indirect: 0,\n        materials: 0,\n        subcontracts: 0,\n        profit: 0,\n        total: 0,\n      },\n      programManager: \"\",\n      technicalLead: \"\",\n      contractingOfficer: \"\",\n      contractingOfficerRep: \"\",\n      teams: [],\n      healthScore: 100,\n      risks: [],\n      cdrls: [],\n      milestones: [],\n      laborCategories: [],\n      indirectRate: 0,\n      proposalSubmitted: false,\n    };\n    setEditingContract(newContract);\n    setSelectedContract(null);\n    setViewMode(\"form\");\n  };\n\n  const handleEditContract = (contract: any) => {\n    setEditingContract(contract);\n    setSelectedContract(null);\n    setViewMode(\"form\");\n  };\n\n  const handleArchiveContract = async (contractId: string) => {\n    try {\n      await apiClient.run({\n        service: \"contract\",\n        operation: \"updateContract\",\n        data: {\n          contractId,\n          status: \"closed\",\n          archivedAt: new Date().toISOString(),\n        },\n        app: \"pmbook\",\n      });\n      await loadContracts();\n    } catch (error) {\n      console.error(\"Failed to archive contract:\", error);\n    }\n  };\n\n  const handleSaveContract = async (contractData: any) => {\n    try {\n      if (editingContract) {\n        await apiClient.run({\n          service: \"contract\",\n          operation: \"updateContract\",\n          data: {\n            ...contractData,\n            contractId: editingContract.id,\n          },\n          app: \"pmbook\",\n        });\n      } else {\n        await apiClient.run({\n          service: \"contract\",\n          operation: \"createContract\",\n          data: contractData,\n          app: \"pmbook\",\n        });\n      }\n      await loadContracts();\n      setViewMode(\"list\");\n      setEditingContract(null);\n      setIsFormOpen(false);\n    } catch (error) {\n      console.error(\"Failed to save contract:\", error);\n    }\n  };\n\n  const filteredContracts = (contracts || []).filter((contract) => {\n    if (filter === \"all\") return true;\n    if (filter === \"active\") return contract.status !== \"closed\";\n    if (filter === \"archived\") return contract.status === \"closed\";\n    return true;\n  });\n\n  const handleCancelEdit = () => {\n    setViewMode(\"list\");\n    setEditingContract(null);\n    setIsFormOpen(false);\n    if (contracts.length > 0) {\n      setSelectedContract(contracts[0]);\n    }\n  };\n\n  // Show breadcrumbs when in form mode\n  const Breadcrumbs = () => (\n    <div className=\"flex items-center space-x-2 text-sm text-muted-foreground mb-4\">\n      <button\n        onClick={() => {\n          setViewMode(\"list\");\n          setEditingContract(null);\n        }}\n        className=\"hover:text-foreground transition-colors\"\n      >\n        Contracts\n      </button>\n      <span>/</span>\n      <span className=\"text-foreground\">\n        {editingContract && contracts.some((c) => c.id === editingContract.id)\n          ? editingContract.name ||\n            editingContract.contractNumber ||\n            \"Edit Contract\"\n          : \"New Contract\"}\n      </span>\n    </div>\n  );\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">Loading...</div>\n    );\n  }\n\n  // Show form view if editing/creating\n  if (viewMode === \"form\" && editingContract) {\n    return (\n      <div className=\"container mx-auto p-6 space-y-6\">\n        <Breadcrumbs />\n        <ContractForm\n          contract={editingContract}\n          isOpen={true}\n          onClose={handleCancelEdit}\n          onSave={handleSaveContract}\n        />\n      </div>\n    );\n  }\n\n  // Show list view\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-start\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Contract Management</h1>\n          <p className=\"text-muted-foreground\">\n            Monitor contracts, deliverables, and financial performance\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button onClick={handleAddContract}>\n            <DynamicIcon name=\"plus\" className=\"mr-2 h-4 w-4\" />\n            Add Contract\n          </Button>\n        </div>\n      </div>\n\n      {/* Filter Tabs */}\n      <div className=\"flex gap-2\">\n        <Button\n          variant={filter === \"active\" ? \"default\" : \"outline\"}\n          size=\"sm\"\n          onClick={() => setFilter(\"active\")}\n        >\n          Active (\n          {(contracts || []).filter((c) => c.status !== \"closed\").length})\n        </Button>\n        <Button\n          variant={filter === \"all\" ? \"default\" : \"outline\"}\n          size=\"sm\"\n          onClick={() => setFilter(\"all\")}\n        >\n          All ({(contracts || []).length})\n        </Button>\n        <Button\n          variant={filter === \"archived\" ? \"default\" : \"outline\"}\n          size=\"sm\"\n          onClick={() => setFilter(\"archived\")}\n        >\n          Archived (\n          {(contracts || []).filter((c) => c.status === \"closed\").length})\n        </Button>\n      </div>\n\n      {/* Contract Selector */}\n      <div className=\"flex gap-2 overflow-x-auto pb-2\">\n        {filteredContracts.map((contract) => (\n          <Button\n            key={contract.id}\n            variant={\n              selectedContract?.id === contract.id ? \"default\" : \"outline\"\n            }\n            onClick={() => setSelectedContract(contract)}\n            className=\"flex-shrink-0\"\n          >\n            <div className=\"text-left\">\n              <div className=\"font-medium\">{contract.contractNumber}</div>\n              <div className=\"text-xs text-muted-foreground\">\n                ${(contract.totalValue / 1000000).toFixed(1)}M\n              </div>\n            </div>\n          </Button>\n        ))}\n      </div>\n\n      {selectedContract && (\n        <>\n          {/* Contract Overview with Actions */}\n          <div className=\"flex justify-between items-center mb-4\">\n            <h2 className=\"text-2xl font-semibold\">\n              {selectedContract.name || selectedContract.contractNumber}\n            </h2>\n            <DropdownMenu>\n              <DropdownMenuTrigger asChild>\n                <Button variant=\"outline\" size=\"sm\">\n                  <DynamicIcon name=\"more-vertical\" className=\"h-4 w-4\" />\n                </Button>\n              </DropdownMenuTrigger>\n              <DropdownMenuContent align=\"end\">\n                <DropdownMenuItem\n                  onClick={() => handleEditContract(selectedContract)}\n                >\n                  <DynamicIcon name=\"edit\" className=\"mr-2 h-4 w-4\" />\n                  Edit Contract\n                </DropdownMenuItem>\n                <DropdownMenuItem\n                  onClick={() => handleArchiveContract(selectedContract.id)}\n                >\n                  <DynamicIcon name=\"archive\" className=\"mr-2 h-4 w-4\" />\n                  Archive Contract\n                </DropdownMenuItem>\n                <DropdownMenuItem>\n                  <DynamicIcon name=\"download\" className=\"mr-2 h-4 w-4\" />\n                  Export Data\n                </DropdownMenuItem>\n              </DropdownMenuContent>\n            </DropdownMenu>\n          </div>\n\n          <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm\">Total Value</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  ${(selectedContract.totalValue / 1000000).toFixed(1)}M\n                </div>\n                <Progress\n                  value={\n                    (selectedContract.burnedValue /\n                      selectedContract.totalValue) *\n                    100\n                  }\n                  className=\"mt-2\"\n                />\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {(\n                    (selectedContract.burnedValue /\n                      selectedContract.totalValue) *\n                    100\n                  ).toFixed(0)}\n                  % burned\n                </p>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm\">Monthly Burn</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  $\n                  {(\n                    contractDetails?.burn?.currentMonthBurn / 1000 || 0\n                  ).toFixed(0)}\n                  k\n                </div>\n                <div className=\"flex items-center text-xs text-muted-foreground mt-1\">\n                  <DynamicIcon name=\"trending-up\" className=\"h-3 w-3 mr-1\" />\n                  {contractDetails?.burn?.trend || \"stable\"}\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm\">Health Score</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {selectedContract.healthScore}%\n                </div>\n                <Badge\n                  variant={\n                    selectedContract.healthScore > 80\n                      ? \"default\"\n                      : \"destructive\"\n                  }\n                  className=\"mt-2\"\n                >\n                  {selectedContract.healthScore > 80 ? \"Healthy\" : \"At Risk\"}\n                </Badge>\n              </CardContent>\n            </Card>\n\n            <Card>\n              <CardHeader className=\"pb-2\">\n                <CardTitle className=\"text-sm\">Time Remaining</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {Math.floor(\n                    (new Date(selectedContract.endDate).getTime() -\n                      Date.now()) /\n                      (1000 * 60 * 60 * 24)\n                  )}{\" \"}\n                  days\n                </div>\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  Ends {new Date(selectedContract.endDate).toLocaleDateString()}\n                </p>\n              </CardContent>\n            </Card>\n          </div>\n\n          {/* Contract Details Tabs */}\n          <Card>\n            <CardContent className=\"p-0\">\n              <Tabs defaultValue=\"cdrls\">\n                <TabsList className=\"w-full justify-start rounded-none border-b\">\n                  <TabsTrigger value=\"cdrls\">CDRLs</TabsTrigger>\n                  <TabsTrigger value=\"milestones\">Milestones</TabsTrigger>\n                  <TabsTrigger value=\"financial\">Financial</TabsTrigger>\n                  <TabsTrigger value=\"team\">Team</TabsTrigger>\n                  <TabsTrigger value=\"strategic\">Strategic Goals</TabsTrigger>\n                  <TabsTrigger value=\"workstreams\">Work Streams</TabsTrigger>\n                </TabsList>\n\n                <div className=\"p-6\">\n                  <TabsContent value=\"cdrls\" className=\"space-y-4\">\n                    <div className=\"grid grid-cols-4 gap-4\">\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold\">\n                          {contractDetails?.cdrls?.summary?.total || 0}\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Total CDRLs\n                        </p>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-green-600\">\n                          {contractDetails?.cdrls?.summary?.completed || 0}\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Completed\n                        </p>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-yellow-600\">\n                          {contractDetails?.cdrls?.summary?.pending || 0}\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">Pending</p>\n                      </div>\n                      <div className=\"text-center\">\n                        <div className=\"text-2xl font-bold text-red-600\">\n                          {contractDetails?.cdrls?.summary?.overdue || 0}\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">Overdue</p>\n                      </div>\n                    </div>\n\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium\">Upcoming Deadlines</h4>\n                      {contractDetails?.cdrls?.upcoming?.map((cdrl: any) => (\n                        <div\n                          key={cdrl.id}\n                          className=\"flex items-center justify-between p-3 rounded-lg border\"\n                        >\n                          <div>\n                            <p className=\"font-medium\">\n                              {cdrl.number}: {cdrl.title}\n                            </p>\n                            <p className=\"text-sm text-muted-foreground\">\n                              {cdrl.type}\n                            </p>\n                          </div>\n                          <div className=\"text-right\">\n                            <Badge\n                              variant={\n                                cdrl.status === \"overdue\"\n                                  ? \"destructive\"\n                                  : \"default\"\n                              }\n                            >\n                              {cdrl.status}\n                            </Badge>\n                            <p className=\"text-xs text-muted-foreground mt-1\">\n                              Due: {new Date(cdrl.dueDate).toLocaleDateString()}\n                            </p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"milestones\" className=\"space-y-4\">\n                    <div className=\"space-y-3\">\n                      {contractDetails?.milestones?.milestones?.map(\n                        (milestone: any) => (\n                          <div\n                            key={milestone.id}\n                            className=\"p-4 rounded-lg border\"\n                          >\n                            <div className=\"flex justify-between items-start\">\n                              <div>\n                                <p className=\"font-medium\">{milestone.title}</p>\n                                <p className=\"text-sm text-muted-foreground mt-1\">\n                                  ${(milestone.value / 1000).toFixed(0)}k value\n                                </p>\n                              </div>\n                              <Badge\n                                variant={\n                                  milestone.status === \"complete\"\n                                    ? \"default\"\n                                    : \"secondary\"\n                                }\n                              >\n                                {milestone.status}\n                              </Badge>\n                            </div>\n                            <Progress\n                              value={milestone.progress || 0}\n                              className=\"mt-3\"\n                            />\n                            <p className=\"text-xs text-muted-foreground mt-1\">\n                              {milestone.progress || 0}% complete - Due{\" \"}\n                              {new Date(milestone.dueDate).toLocaleDateString()}\n                            </p>\n                          </div>\n                        )\n                      )}\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"financial\" className=\"space-y-4\">\n                    <div className=\"grid grid-cols-3 gap-4\">\n                      <Card>\n                        <CardHeader className=\"pb-2\">\n                          <CardTitle className=\"text-sm\">\n                            Profit Margin\n                          </CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"text-2xl font-bold\">\n                            {contractDetails?.profitability?.margin?.toFixed(\n                              1\n                            ) || 0}\n                            %\n                          </div>\n                          <p className=\"text-xs text-muted-foreground\">\n                            Target: 15%\n                          </p>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader className=\"pb-2\">\n                          <CardTitle className=\"text-sm\">Revenue</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"text-2xl font-bold\">\n                            $\n                            {(\n                              contractDetails?.profitability?.revenue /\n                                1000000 || 0\n                            ).toFixed(1)}\n                            M\n                          </div>\n                        </CardContent>\n                      </Card>\n\n                      <Card>\n                        <CardHeader className=\"pb-2\">\n                          <CardTitle className=\"text-sm\">Profit</CardTitle>\n                        </CardHeader>\n                        <CardContent>\n                          <div className=\"text-2xl font-bold\">\n                            $\n                            {(\n                              contractDetails?.profitability?.profit / 1000 || 0\n                            ).toFixed(0)}\n                            k\n                          </div>\n                        </CardContent>\n                      </Card>\n                    </div>\n\n                    {contractDetails?.burn?.recommendations?.map(\n                      (rec: any, idx: number) => (\n                        <Alert key={idx}>\n                          <DynamicIcon name=\"alert-circle\" className=\"h-4 w-4\" />\n                          <AlertDescription>\n                            <strong>{rec.message}</strong>\n                            <br />\n                            {rec.action}\n                          </AlertDescription>\n                        </Alert>\n                      )\n                    )}\n                  </TabsContent>\n\n                  <TabsContent value=\"team\">\n                    <div className=\"space-y-4\">\n                      <div>\n                        <p className=\"text-sm font-medium\">Program Manager</p>\n                        <p className=\"text-muted-foreground\">\n                          {selectedContract.programManager}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium\">Technical Lead</p>\n                        <p className=\"text-muted-foreground\">\n                          {selectedContract.technicalLead || \"Not assigned\"}\n                        </p>\n                      </div>\n                      <div>\n                        <p className=\"text-sm font-medium\">Teams</p>\n                        <div className=\"flex gap-2 mt-1\">\n                          {selectedContract.teams?.map((team: string) => (\n                            <Badge key={team} variant=\"outline\">\n                              {team}\n                            </Badge>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"strategic\" className=\"space-y-4\">\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium\">Strategic Goals</h4>\n                      {selectedContract.strategicGoals?.length > 0 ? (\n                        selectedContract.strategicGoals.map((goal: any) => (\n                          <div\n                            key={goal.id}\n                            className=\"p-4 rounded-lg border space-y-2\"\n                          >\n                            <div className=\"flex justify-between items-start\">\n                              <div>\n                                <p className=\"font-medium\">{goal.title}</p>\n                                <p className=\"text-sm text-muted-foreground\">\n                                  {goal.description}\n                                </p>\n                              </div>\n                              <Badge\n                                variant={\n                                  goal.priority === \"critical\"\n                                    ? \"destructive\"\n                                    : goal.priority === \"high\"\n                                    ? \"default\"\n                                    : \"secondary\"\n                                }\n                              >\n                                {goal.priority}\n                              </Badge>\n                            </div>\n                            <Progress\n                              value={goal.progress || 0}\n                              className=\"mt-2\"\n                            />\n                            <div className=\"flex justify-between text-xs text-muted-foreground\">\n                              <span>{goal.status}</span>\n                              <span>\n                                Target:{\" \"}\n                                {new Date(goal.targetDate).toLocaleDateString()}\n                              </span>\n                            </div>\n                          </div>\n                        ))\n                      ) : (\n                        <p className=\"text-muted-foreground\">\n                          No strategic goals defined\n                        </p>\n                      )}\n                    </div>\n                  </TabsContent>\n\n                  <TabsContent value=\"workstreams\" className=\"space-y-4\">\n                    <div className=\"space-y-3\">\n                      <h4 className=\"font-medium\">Work Stream Allocations</h4>\n                      {selectedContract.workStreams?.length > 0 ? (\n                        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                          {selectedContract.workStreams.map((ws: any) => (\n                            <Card key={ws.workStreamId}>\n                              <CardHeader className=\"pb-2\">\n                                <div className=\"flex justify-between items-start\">\n                                  <CardTitle className=\"text-sm\">\n                                    {ws.workStreamName}\n                                  </CardTitle>\n                                  <Badge variant=\"outline\">\n                                    {ws.allocation}%\n                                  </Badge>\n                                </div>\n                              </CardHeader>\n                              <CardContent className=\"space-y-2\">\n                                <div>\n                                  <p className=\"text-xs font-medium\">Lead</p>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    {ws.lead}\n                                  </p>\n                                </div>\n                                <div>\n                                  <p className=\"text-xs font-medium\">\n                                    Team Size\n                                  </p>\n                                  <p className=\"text-sm text-muted-foreground\">\n                                    {ws.teamMembers?.length || 0} members\n                                  </p>\n                                </div>\n                                <div>\n                                  <p className=\"text-xs font-medium\">Status</p>\n                                  <Badge\n                                    variant={\n                                      ws.status === \"active\"\n                                        ? \"default\"\n                                        : \"secondary\"\n                                    }\n                                    className=\"mt-1\"\n                                  >\n                                    {ws.status}\n                                  </Badge>\n                                </div>\n                              </CardContent>\n                            </Card>\n                          ))}\n                        </div>\n                      ) : (\n                        <p className=\"text-muted-foreground\">\n                          No work stream allocations defined\n                        </p>\n                      )}\n                    </div>\n                  </TabsContent>\n                </div>\n              </Tabs>\n            </CardContent>\n          </Card>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default ContractsPage;\n","\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCaptify } from \"@captify-io/platform/hooks\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Button,\n  Progress,\n  Alert,\n  AlertDescription,\n  DynamicIcon,\n} from \"@captify-io/platform/ui\";\n\nexport function CommandCenterPage() {\n  const { session } = useCaptify();\n  const [health, setHealth] = useState<any>(null);\n  const [dashboard, setDashboard] = useState<any>(null);\n  const [recommendations, setRecommendations] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadDashboardData();\n  }, []);\n\n  const loadDashboardData = async () => {\n    try {\n      // Check if user has Operations role\n      const hasAccess = session?.user?.groups?.includes(\"Operations\");\n\n      if (!hasAccess) {\n        setLoading(false);\n        return;\n      }\n\n      const [healthResponse, dashboardResponse, recsResponse] =\n        await Promise.all([\n          apiClient.run({\n            service: \"performance\",\n            operation: \"getCompanyHealth\",\n          }),\n          apiClient.run({\n            service: \"performance\",\n            operation: \"getExecutiveDashboard\",\n          }),\n          apiClient.run({\n            service: \"intelligence\",\n            operation: \"getRecommendations\",\n            data: { role: \"executive\" },\n          }),\n        ]);\n\n      setHealth(healthResponse.data);\n      setDashboard(dashboardResponse.data);\n      setRecommendations(recsResponse.data || []);\n    } catch (error) {\n      console.error(\"Failed to load dashboard:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">Loading...</div>\n    );\n  }\n\n  if (!session?.user?.groups?.includes(\"Operations\")) {\n    return (\n      <div className=\"container mx-auto p-6\">\n        <Alert>\n          <DynamicIcon name=\"alert-circle\" className=\"h-4 w-4\" />\n          <AlertDescription>\n            You need Operations role to view this page.\n          </AlertDescription>\n        </Alert>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Command Center</h1>\n          <p className=\"text-muted-foreground\">\n            Strategic business intelligence\n          </p>\n        </div>\n        <Badge\n          variant={health?.trend === \"improving\" ? \"default\" : \"destructive\"}\n        >\n          Health Score: {health?.score || 0}/100\n        </Badge>\n      </div>\n\n      {/* Critical Alerts */}\n      {dashboard?.health?.alerts?.length > 0 && (\n        <Alert variant=\"destructive\">\n          <DynamicIcon name=\"alert-circle\" className=\"h-4 w-4\" />\n          <AlertDescription>\n            {dashboard.health.alerts[0].description}\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Key Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Runway</CardTitle>\n            <DynamicIcon name=\"clock\" className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dashboard?.health?.runway?.toFixed(1) || 0} months\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Cash available</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Monthly Burn</CardTitle>\n            <DynamicIcon name=\"dollar-sign\" className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              ${(dashboard?.financial?.monthlyBurn / 1000 || 0).toFixed(0)}k\n            </div>\n            <div className=\"flex items-center text-xs\">\n              {dashboard?.health?.trend === \"improving\" ? (\n                <DynamicIcon name=\"trending-down\" className=\"h-3 w-3 text-green-500 mr-1\" />\n              ) : (\n                <DynamicIcon name=\"trending-up\" className=\"h-3 w-3 text-red-500 mr-1\" />\n              )}\n              <span>vs last month</span>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Utilization</CardTitle>\n            <DynamicIcon name=\"users\" className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dashboard?.operations?.utilizationRate?.toFixed(0) || 0}%\n            </div>\n            <Progress\n              value={dashboard?.operations?.utilizationRate || 0}\n              className=\"mt-2\"\n            />\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Profit Margin</CardTitle>\n            <DynamicIcon name=\"target\" className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {dashboard?.health?.profitMargin?.toFixed(1) || 0}%\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Target: 15%</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Financial Overview */}\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Financial Forecast</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Best Case</span>\n                <span className=\"text-sm font-medium\">\n                  ${(dashboard?.forecast?.bestCase / 1000000 || 0).toFixed(1)}M\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Likely</span>\n                <span className=\"text-sm font-medium\">\n                  $\n                  {(\n                    dashboard?.forecast?.nextQuarter?.revenue / 1000000 || 0\n                  ).toFixed(1)}\n                  M\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Worst Case</span>\n                <span className=\"text-sm font-medium\">\n                  ${(dashboard?.forecast?.worstCase / 1000000 || 0).toFixed(1)}M\n                </span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Operational Metrics</CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div className=\"space-y-2\">\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Delivery Velocity</span>\n                <span className=\"text-sm font-medium\">\n                  {dashboard?.operations?.deliveryVelocity || 0} pts/sprint\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">Customer Satisfaction</span>\n                <span className=\"text-sm font-medium\">\n                  {dashboard?.operations?.customerSatisfaction?.toFixed(1) || 0}\n                  /5\n                </span>\n              </div>\n              <div className=\"flex justify-between\">\n                <span className=\"text-sm\">SLA Compliance</span>\n                <span className=\"text-sm font-medium\">\n                  {dashboard?.operations?.slaCompliance || 0}%\n                </span>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* AI Recommendations */}\n      {recommendations.length > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"flex items-center gap-2\">\n              <DynamicIcon name=\"activity\" className=\"h-5 w-5\" />\n              AI Recommendations\n            </CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-3\">\n              {recommendations.slice(0, 3).map((rec, idx) => (\n                <div\n                  key={idx}\n                  className=\"flex items-start gap-3 p-3 rounded-lg bg-muted/50\"\n                >\n                  <Badge\n                    variant={\n                      rec.priority === \"high\" ? \"destructive\" : \"default\"\n                    }\n                  >\n                    {rec.priority}\n                  </Badge>\n                  <div className=\"flex-1\">\n                    <p className=\"font-medium text-sm\">{rec.title}</p>\n                    <p className=\"text-xs text-muted-foreground mt-1\">\n                      {rec.action}\n                    </p>\n                    {rec.impact && (\n                      <p className=\"text-xs text-green-600 mt-1\">\n                        Impact: {rec.impact}\n                      </p>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}\n\nexport default CommandCenterPage;\n","\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCaptify } from \"@captify-io/platform/hooks\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n} from \"@captify-io/platform/ui\";\n\nexport function PerformancePage() {\n  const { session } = useCaptify();\n  const [businessHealth, setBusinessHealth] = useState<any>(null);\n  const [burnAnalysis, setBurnAnalysis] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    loadPerformanceData();\n  }, []);\n\n  const loadPerformanceData = async () => {\n    try {\n      // Load business health metrics\n      const healthResponse = await apiClient.run({\n        service: \"performance\",\n        operation: \"getBusinessHealth\",\n        data: {},\n      });\n      setBusinessHealth(healthResponse.data || null);\n\n      // Load burn analysis\n      const burnResponse = await apiClient.run({\n        service: \"performance\",\n        operation: \"calculateBurnAnalysis\",\n        data: { period: \"month\" },\n      });\n      setBurnAnalysis(burnResponse.data || null);\n    } catch (error) {\n      console.error(\"Failed to load performance data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatCurrency = (amount: number) => {\n    return new Intl.NumberFormat(\"en-US\", {\n      style: \"currency\",\n      currency: \"USD\",\n    }).format(amount);\n  };\n\n  return (\n    <div className=\"container mx-auto p-6\">\n      <h1 className=\"text-3xl font-bold mb-6\">Performance Analytics</h1>\n\n      {/* Business Health Overview */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6 mb-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-sm\">Overall Health</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-green-600\">\n              {loading ? \"...\" : businessHealth?.overallScore || 0}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Health Score</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-sm\">Monthly Revenue</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-blue-600\">\n              {loading\n                ? \"...\"\n                : formatCurrency(businessHealth?.financial?.revenue || 0)}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Current Month</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-sm\">Profit Margin</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-purple-600\">\n              {loading\n                ? \"...\"\n                : `${Math.round(\n                    businessHealth?.financial?.profitMargin || 0\n                  )}%`}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Current Margin</p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-sm\">Team Utilization</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold text-orange-600\">\n              {loading\n                ? \"...\"\n                : `${businessHealth?.employee?.utilization || 0}%`}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">Current Rate</p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Financial Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-6\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Financial Health</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {loading ? (\n              <p>Loading...</p>\n            ) : businessHealth?.financial ? (\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>Revenue:</span>\n                  <span className=\"font-medium\">\n                    {formatCurrency(businessHealth.financial.revenue)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Costs:</span>\n                  <span className=\"font-medium\">\n                    {formatCurrency(businessHealth.financial.costs)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Profit:</span>\n                  <span className=\"font-medium text-green-600\">\n                    {formatCurrency(businessHealth.financial.profit)}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Runway:</span>\n                  <span className=\"font-medium\">\n                    {Math.round(businessHealth.financial.runway)} months\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Backlog:</span>\n                  <span className=\"font-medium\">\n                    {formatCurrency(businessHealth.financial.backlog)}\n                  </span>\n                </div>\n              </div>\n            ) : (\n              <p>No financial data available</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Employee Metrics</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {loading ? (\n              <p>Loading...</p>\n            ) : businessHealth?.employee ? (\n              <div className=\"space-y-3\">\n                <div className=\"flex justify-between\">\n                  <span>Headcount:</span>\n                  <span className=\"font-medium\">\n                    {businessHealth.employee.headcount}\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Utilization:</span>\n                  <span className=\"font-medium\">\n                    {businessHealth.employee.utilization}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Satisfaction:</span>\n                  <span className=\"font-medium\">\n                    {businessHealth.employee.satisfaction}/5.0\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Retention:</span>\n                  <span className=\"font-medium\">\n                    {businessHealth.employee.retention}%\n                  </span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span>Value/Employee:</span>\n                  <span className=\"font-medium\">\n                    {formatCurrency(businessHealth.employee.valuePerEmployee)}\n                  </span>\n                </div>\n              </div>\n            ) : (\n              <p>No employee data available</p>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Burn Analysis */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Monthly Burn Analysis</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {loading ? (\n            <p>Loading...</p>\n          ) : burnAnalysis ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <div>\n                <h4 className=\"font-semibold mb-2\">Revenue</h4>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {formatCurrency(burnAnalysis.revenue)}\n                </p>\n              </div>\n              <div>\n                <h4 className=\"font-semibold mb-2\">Total Costs</h4>\n                <p className=\"text-2xl font-bold text-red-600\">\n                  {formatCurrency(burnAnalysis.totalCosts)}\n                </p>\n              </div>\n              <div>\n                <h4 className=\"font-semibold mb-2\">Net Profit</h4>\n                <p className=\"text-2xl font-bold text-blue-600\">\n                  {formatCurrency(burnAnalysis.profit)}\n                </p>\n              </div>\n              <div className=\"mt-4\">\n                <h4 className=\"font-semibold mb-2\">Efficiency</h4>\n                <p className=\"text-lg\">\n                  {burnAnalysis.efficiency}% cost efficiency\n                </p>\n              </div>\n            </div>\n          ) : (\n            <p>No burn analysis data available</p>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\n// CRITICAL: Must have default export for dynamic imports\nexport default PerformancePage;\n","\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCaptify } from \"@captify-io/platform/hooks\";\r\nimport { apiClient } from \"@captify-io/platform/api\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@captify-io/platform/ui\";\r\n\r\nexport function ValueStreamsPage() {\r\n  const { session } = useCaptify();\r\n  const [valueStreams, setValueStreams] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadValueStreams();\r\n  }, []);\r\n\r\n  const loadValueStreams = async () => {\r\n    try {\r\n      const response = await apiClient.run({\r\n        service: \"execution\",\r\n        operation: \"getValueStreams\",\r\n        data: {},\r\n      });\r\n      setValueStreams(response.data || []);\r\n    } catch (error) {\r\n      console.error(\"Failed to load value streams:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case \"active\":\r\n        return \"text-green-600 bg-green-50 border-green-200\";\r\n      case \"planning\":\r\n        return \"text-yellow-600 bg-yellow-50 border-yellow-200\";\r\n      case \"blocked\":\r\n        return \"text-red-600 bg-red-50 border-red-200\";\r\n      default:\r\n        return \"text-blue-600 bg-blue-50 border-blue-200\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <h1 className=\"text-3xl font-bold mb-6\">Value Streams</h1>\r\n\r\n      {loading ? (\r\n        <p>Loading value streams...</p>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {valueStreams.length > 0 ? (\r\n            valueStreams.map((stream: any) => (\r\n              <Card key={stream.id} className=\"hover:shadow-md transition-shadow\">\r\n                <CardHeader>\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <CardTitle className=\"text-lg\">{stream.name}</CardTitle>\r\n                    <span\r\n                      className={`px-2 py-1 text-xs rounded-full border ${getStatusColor(\r\n                        stream.status\r\n                      )}`}\r\n                    >\r\n                      {stream.status}\r\n                    </span>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardContent>\r\n                  <p className=\"text-sm text-muted-foreground mb-4\">\r\n                    {stream.description}\r\n                  </p>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span>Lead Time:</span>\r\n                      <span className=\"font-medium\">{stream.leadTime}d</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span>Throughput:</span>\r\n                      <span className=\"font-medium\">{stream.throughput}/week</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span>Efficiency:</span>\r\n                      <span className=\"font-medium\">{stream.efficiency}%</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mt-4 pt-4 border-t\">\r\n                    <p className=\"text-xs text-muted-foreground\">\r\n                      Owner: {stream.owner} • Last updated: {new Date(stream.lastUpdated).toLocaleDateString()}\r\n                    </p>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))\r\n          ) : (\r\n            <div className=\"col-span-full text-center py-12\">\r\n              <p className=\"text-muted-foreground\">No value streams configured</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// CRITICAL: Must have default export for dynamic imports\r\nexport default ValueStreamsPage;","\"use client\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useCaptify } from \"@captify-io/platform/hooks\";\r\nimport { apiClient } from \"@captify-io/platform/api\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@captify-io/platform/ui\";\r\n\r\nexport function MyTicketsPage() {\r\n  const { session } = useCaptify();\r\n  const [tickets, setTickets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  useEffect(() => {\r\n    loadMyTickets();\r\n  }, [filter]);\r\n\r\n  const loadMyTickets = async () => {\r\n    try {\r\n      const response = await apiClient.run({\r\n        service: \"execution\",\r\n        operation: \"getMyTickets\",\r\n        data: { filter },\r\n      });\r\n      setTickets(response.data || []);\r\n    } catch (error) {\r\n      console.error(\"Failed to load tickets:\", error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case \"todo\":\r\n        return \"text-gray-600 bg-gray-50 border-gray-200\";\r\n      case \"in-progress\":\r\n        return \"text-blue-600 bg-blue-50 border-blue-200\";\r\n      case \"review\":\r\n        return \"text-yellow-600 bg-yellow-50 border-yellow-200\";\r\n      case \"done\":\r\n        return \"text-green-600 bg-green-50 border-green-200\";\r\n      default:\r\n        return \"text-gray-600 bg-gray-50 border-gray-200\";\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority: string) => {\r\n    switch (priority) {\r\n      case \"critical\":\r\n        return \"text-red-600\";\r\n      case \"high\":\r\n        return \"text-orange-600\";\r\n      case \"medium\":\r\n        return \"text-yellow-600\";\r\n      case \"low\":\r\n        return \"text-green-600\";\r\n      default:\r\n        return \"text-gray-600\";\r\n    }\r\n  };\r\n\r\n  const filteredTickets = tickets.filter((ticket: any) => {\r\n    if (filter === \"all\") return true;\r\n    return ticket.status === filter;\r\n  });\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-6\">\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-3xl font-bold\">My Tickets</h1>\r\n        \r\n        <div className=\"flex gap-2\">\r\n          {[\"all\", \"todo\", \"in-progress\", \"review\", \"done\"].map((status) => (\r\n            <button\r\n              key={status}\r\n              onClick={() => setFilter(status)}\r\n              className={`px-3 py-1 text-sm rounded-md border transition-colors ${\r\n                filter === status\r\n                  ? \"bg-blue-100 border-blue-300 text-blue-700\"\r\n                  : \"bg-white border-gray-200 text-gray-600 hover:bg-gray-50\"\r\n              }`}\r\n            >\r\n              {status === \"all\" ? \"All\" : status.charAt(0).toUpperCase() + status.slice(1).replace(\"-\", \" \")}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {loading ? (\r\n        <p>Loading tickets...</p>\r\n      ) : (\r\n        <div className=\"space-y-4\">\r\n          {filteredTickets.length > 0 ? (\r\n            filteredTickets.map((ticket: any) => (\r\n              <Card key={ticket.id} className=\"hover:shadow-md transition-shadow\">\r\n                <CardContent className=\"pt-6\">\r\n                  <div className=\"flex justify-between items-start mb-4\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center gap-2 mb-2\">\r\n                        <h3 className=\"font-semibold text-lg\">{ticket.title}</h3>\r\n                        <span\r\n                          className={`px-2 py-1 text-xs rounded-full border ${getStatusColor(\r\n                            ticket.status\r\n                          )}`}\r\n                        >\r\n                          {ticket.status.replace(\"-\", \" \")}\r\n                        </span>\r\n                      </div>\r\n                      <p className=\"text-sm text-muted-foreground mb-2\">\r\n                        {ticket.description}\r\n                      </p>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center gap-4 ml-4\">\r\n                      <div className=\"text-right\">\r\n                        <p className={`text-sm font-medium ${getPriorityColor(ticket.priority)}`}>\r\n                          {ticket.priority} priority\r\n                        </p>\r\n                        <p className=\"text-xs text-muted-foreground\">\r\n                          Due: {new Date(ticket.dueDate).toLocaleDateString()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex justify-between items-center pt-4 border-t\">\r\n                    <div className=\"flex gap-4 text-xs text-muted-foreground\">\r\n                      <span>ID: {ticket.id}</span>\r\n                      <span>Project: {ticket.project}</span>\r\n                      <span>Assignee: {ticket.assignee}</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex gap-2\">\r\n                      <button className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\">\r\n                        View\r\n                      </button>\r\n                      {ticket.status !== \"done\" && (\r\n                        <button className=\"px-3 py-1 text-xs border border-gray-300 rounded hover:bg-gray-50\">\r\n                          Update\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </CardContent>\r\n              </Card>\r\n            ))\r\n          ) : (\r\n            <div className=\"text-center py-12\">\r\n              <p className=\"text-muted-foreground\">\r\n                {filter === \"all\" ? \"No tickets assigned to you\" : `No ${filter.replace(\"-\", \" \")} tickets`}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// CRITICAL: Must have default export for dynamic imports\r\nexport default MyTicketsPage;","\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCaptify } from \"@captify-io/platform/hooks\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Badge,\n  Button,\n  Input,\n  Textarea,\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  DynamicIcon,\n} from \"@captify-io/platform/ui\";\n\nexport function ServicesHubPage() {\n  const { session } = useCaptify();\n  const [marketplace, setMarketplace] = useState<any>(null);\n  const [catalog, setCatalog] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [showCreateTicket, setShowCreateTicket] = useState(false);\n  const [newTicket, setNewTicket] = useState({\n    title: \"\",\n    description: \"\",\n    serviceArea: \"DevOps\",\n    type: \"request\",\n    priority: \"medium\",\n    bounty: 0,\n  });\n\n  useEffect(() => {\n    loadMarketplace();\n    loadCatalog();\n  }, []);\n\n  const loadMarketplace = async () => {\n    try {\n      const response = await apiClient.run({\n        service: \"service\",\n        operation: \"getMarketplace\",\n        data: { userId: session?.user?.id },\n      });\n      setMarketplace(response?.data || []);\n    } catch (error) {\n      console.error(\"Failed to load marketplace:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const loadCatalog = async () => {\n    try {\n      const response = await apiClient.run({\n        service: \"service\",\n        operation: \"getServiceCatalog\",\n      });\n      setCatalog(response?.data || []);\n    } catch (error) {\n      console.error(\"Failed to load catalog:\", error);\n    }\n  };\n\n  const createTicket = async () => {\n    try {\n      await apiClient.run({\n        service: \"service\",\n        operation: \"createTicket\",\n        data: {\n          ...newTicket,\n          requestor: session?.user?.id,\n        },\n      });\n      setShowCreateTicket(false);\n      setNewTicket({\n        title: \"\",\n        description: \"\",\n        serviceArea: \"DevOps\",\n        type: \"request\",\n        priority: \"medium\",\n        bounty: 0,\n      });\n      loadMarketplace();\n    } catch (error) {\n      console.error(\"Failed to create ticket:\", error);\n    }\n  };\n\n  const claimTicket = async (ticketId: string) => {\n    try {\n      await apiClient.run({\n        service: \"service\",\n        operation: \"claimTicket\",\n        data: {\n          ticketId,\n          userId: session?.user?.id,\n        },\n      });\n      loadMarketplace();\n    } catch (error) {\n      console.error(\"Failed to claim ticket:\", error);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">Loading...</div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Services Hub</h1>\n          <p className=\"text-muted-foreground\">Internal service marketplace</p>\n        </div>\n        <Button onClick={() => setShowCreateTicket(true)}>\n          <DynamicIcon name=\"plus\" className=\"h-4 w-4 mr-2\" />\n          Create Ticket\n        </Button>\n      </div>\n\n      {/* Marketplace Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">Available Tickets</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {marketplace?.available?.urgent?.length +\n                marketplace?.available?.highBounty?.length || 0}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              ${marketplace?.potentialEarnings || 0} potential\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">My Active</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {marketplace?.myTickets?.assigned?.length || 0}\n            </div>\n            <div className=\"flex items-center text-xs text-muted-foreground\">\n              <DynamicIcon name=\"clock\" className=\"h-3 w-3 mr-1\" />\n              In progress\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">My Requests</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {marketplace?.myTickets?.requested?.length || 0}\n            </div>\n            <div className=\"flex items-center text-xs text-muted-foreground\">\n              <DynamicIcon name=\"ticket\" className=\"h-3 w-3 mr-1\" />\n              Submitted\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">Leaderboard Rank</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">#5</div>\n            <div className=\"flex items-center text-xs text-muted-foreground\">\n              <DynamicIcon name=\"star\" className=\"h-3 w-3 mr-1\" />\n              Top performer\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Service Marketplace */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Service Marketplace</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"available\">\n            <TabsList>\n              <TabsTrigger value=\"available\">Available</TabsTrigger>\n              <TabsTrigger value=\"mytickets\">My Tickets</TabsTrigger>\n              <TabsTrigger value=\"catalog\">Service Catalog</TabsTrigger>\n              <TabsTrigger value=\"leaderboard\">Leaderboard</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"available\" className=\"space-y-4\">\n              {marketplace?.available?.urgent?.length > 0 && (\n                <div>\n                  <h4 className=\"font-medium mb-3 flex items-center gap-2\">\n                    <Badge variant=\"destructive\">Urgent</Badge>\n                    High Priority Tickets\n                  </h4>\n                  <div className=\"space-y-3\">\n                    {marketplace.available.urgent.map((ticket: any) => (\n                      <TicketCard\n                        key={ticket.id}\n                        ticket={ticket}\n                        onClaim={claimTicket}\n                      />\n                    ))}\n                  </div>\n                </div>\n              )}\n\n              {marketplace?.available?.highBounty?.length > 0 && (\n                <div>\n                  <h4 className=\"font-medium mb-3 flex items-center gap-2\">\n                    <DynamicIcon name=\"dollar-sign\" className=\"h-4 w-4\" />\n                    High Bounty\n                  </h4>\n                  <div className=\"space-y-3\">\n                    {marketplace.available.highBounty.map((ticket: any) => (\n                      <TicketCard\n                        key={ticket.id}\n                        ticket={ticket}\n                        onClaim={claimTicket}\n                      />\n                    ))}\n                  </div>\n                </div>\n              )}\n            </TabsContent>\n\n            <TabsContent value=\"mytickets\" className=\"space-y-4\">\n              <div>\n                <h4 className=\"font-medium mb-3\">Assigned to Me</h4>\n                <div className=\"space-y-3\">\n                  {marketplace?.myTickets?.assigned?.map((ticket: any) => (\n                    <TicketCard key={ticket.id} ticket={ticket} assigned />\n                  ))}\n                </div>\n              </div>\n\n              <div>\n                <h4 className=\"font-medium mb-3\">My Requests</h4>\n                <div className=\"space-y-3\">\n                  {marketplace?.myTickets?.requested?.map((ticket: any) => (\n                    <TicketCard key={ticket.id} ticket={ticket} requested />\n                  ))}\n                </div>\n              </div>\n            </TabsContent>\n\n            <TabsContent value=\"catalog\" className=\"space-y-3\">\n              {catalog.map((service: any) => (\n                <div key={service.id} className=\"p-4 rounded-lg border\">\n                  <div className=\"flex justify-between items-start\">\n                    <div>\n                      <h4 className=\"font-medium\">{service.service}</h4>\n                      <p className=\"text-sm text-muted-foreground mt-1\">\n                        {service.description}\n                      </p>\n                      <div className=\"flex gap-2 mt-2\">\n                        <Badge variant=\"outline\">{service.serviceArea}</Badge>\n                        <Badge variant=\"outline\">{service.complexity}</Badge>\n                        <Badge variant=\"outline\">\n                          {service.estimatedTime}h\n                        </Badge>\n                      </div>\n                    </div>\n                    {service.selfService && <Button size=\"sm\">Request</Button>}\n                  </div>\n                </div>\n              ))}\n            </TabsContent>\n\n            <TabsContent value=\"leaderboard\">\n              <div className=\"space-y-3\">\n                {marketplace?.leaderboard?.map((entry: any, idx: number) => (\n                  <div\n                    key={entry.userId}\n                    className=\"flex items-center justify-between p-4 rounded-lg border\"\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <div className=\"text-2xl font-bold\">#{idx + 1}</div>\n                      <div>\n                        <p className=\"font-medium\">{entry.userId}</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {entry.ticketsResolved} resolved\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"text-right\">\n                      <div className=\"flex items-center gap-1\">\n                        <DynamicIcon name=\"star\" className=\"h-4 w-4 text-yellow-500\" />\n                        <span className=\"font-medium\">\n                          {entry.satisfaction}%\n                        </span>\n                      </div>\n                      <p className=\"text-sm text-muted-foreground\">\n                        ${entry.earnings} earned\n                      </p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n\n      {/* Create Ticket Modal */}\n      {showCreateTicket && (\n        <div className=\"fixed inset-0 bg-background/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\">\n          <Card className=\"w-full max-w-lg\">\n            <CardHeader>\n              <CardTitle>Create Service Ticket</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div>\n                <label className=\"text-sm font-medium\">Title</label>\n                <Input\n                  value={newTicket.title}\n                  onChange={(e) =>\n                    setNewTicket({ ...newTicket, title: e.target.value })\n                  }\n                  placeholder=\"Brief description of what you need\"\n                />\n              </div>\n\n              <div>\n                <label className=\"text-sm font-medium\">Description</label>\n                <Textarea\n                  value={newTicket.description}\n                  onChange={(e) =>\n                    setNewTicket({ ...newTicket, description: e.target.value })\n                  }\n                  placeholder=\"Detailed description and acceptance criteria\"\n                  rows={4}\n                />\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <label className=\"text-sm font-medium\">Service Area</label>\n                  <Select\n                    value={newTicket.serviceArea}\n                    onValueChange={(value) =>\n                      setNewTicket({ ...newTicket, serviceArea: value })\n                    }\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"DevOps\">DevOps</SelectItem>\n                      <SelectItem value=\"DataOps\">DataOps</SelectItem>\n                      <SelectItem value=\"PlatformOps\">PlatformOps</SelectItem>\n                      <SelectItem value=\"HelpDesk\">Help Desk</SelectItem>\n                      <SelectItem value=\"Security\">Security</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n\n                <div>\n                  <label className=\"text-sm font-medium\">Priority</label>\n                  <Select\n                    value={newTicket.priority}\n                    onValueChange={(value) =>\n                      setNewTicket({ ...newTicket, priority: value })\n                    }\n                  >\n                    <SelectTrigger>\n                      <SelectValue />\n                    </SelectTrigger>\n                    <SelectContent>\n                      <SelectItem value=\"low\">Low</SelectItem>\n                      <SelectItem value=\"medium\">Medium</SelectItem>\n                      <SelectItem value=\"high\">High</SelectItem>\n                      <SelectItem value=\"critical\">Critical</SelectItem>\n                    </SelectContent>\n                  </Select>\n                </div>\n              </div>\n\n              <div>\n                <label className=\"text-sm font-medium\">Bounty (optional)</label>\n                <Input\n                  type=\"number\"\n                  value={newTicket.bounty}\n                  onChange={(e) =>\n                    setNewTicket({\n                      ...newTicket,\n                      bounty: parseInt(e.target.value) || 0,\n                    })\n                  }\n                  placeholder=\"Incentive amount for faster completion\"\n                />\n              </div>\n\n              <div className=\"flex gap-2\">\n                <Button onClick={createTicket} className=\"flex-1\">\n                  Create Ticket\n                </Button>\n                <Button\n                  onClick={() => setShowCreateTicket(false)}\n                  variant=\"outline\"\n                  className=\"flex-1\"\n                >\n                  Cancel\n                </Button>\n              </div>\n            </CardContent>\n          </Card>\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction TicketCard({ ticket, onClaim, assigned, requested }: any) {\n  return (\n    <div className=\"flex items-center justify-between p-4 rounded-lg border bg-card\">\n      <div className=\"flex-1\">\n        <div className=\"flex items-center gap-2\">\n          <h4 className=\"font-medium\">{ticket.title}</h4>\n          <Badge\n            variant={ticket.priority === \"critical\" ? \"destructive\" : \"default\"}\n          >\n            {ticket.priority}\n          </Badge>\n        </div>\n        <p className=\"text-sm text-muted-foreground mt-1\">\n          {ticket.description}\n        </p>\n        <div className=\"flex items-center gap-4 mt-2\">\n          <Badge variant=\"outline\">{ticket.serviceArea}</Badge>\n          {ticket.bounty > 0 && (\n            <div className=\"flex items-center text-sm\">\n              <DynamicIcon name=\"dollar-sign\" className=\"h-3 w-3\" />\n              {ticket.bounty}\n            </div>\n          )}\n          {ticket.sla && (\n            <div className=\"flex items-center text-sm text-muted-foreground\">\n              <DynamicIcon name=\"clock\" className=\"h-3 w-3 mr-1\" />\n              SLA: {ticket.sla}h\n            </div>\n          )}\n        </div>\n      </div>\n      {!assigned && !requested && onClaim && (\n        <Button onClick={() => onClaim(ticket.id)} size=\"sm\">\n          Claim\n        </Button>\n      )}\n      {assigned && <Badge variant=\"default\">In Progress</Badge>}\n      {requested && <Badge variant=\"outline\">{ticket.status}</Badge>}\n    </div>\n  );\n}\n\nexport default ServicesHubPage;\n","\"use client\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { useCaptify } from \"@captify-io/platform/hooks\";\nimport { apiClient } from \"@captify-io/platform/api\";\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  CardTitle,\n  Button,\n  Badge,\n  Progress,\n  Tabs,\n  TabsContent,\n  TabsList,\n  TabsTrigger,\n  DynamicIcon,\n} from \"@captify-io/platform/ui\";\n\nexport function WorkDashboardPage() {\n  const { session } = useCaptify();\n  const [activeWork, setActiveWork] = useState<any>(null);\n  const [workQueue, setWorkQueue] = useState<any>(null);\n  const [productivity, setProductivity] = useState<any>(null);\n  const [loading, setLoading] = useState(true);\n  const [timer, setTimer] = useState(0);\n\n  useEffect(() => {\n    loadWorkData();\n    const interval = setInterval(() => {\n      if (activeWork) {\n        setTimer((prev) => prev + 1);\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [activeWork]);\n\n  const loadWorkData = async () => {\n    try {\n      const [queueData, prodData] = await Promise.all([\n        apiClient.run({\n          service: \"work\",\n          operation: \"getWorkQueue\",\n          data: { userId: session?.user?.id },\n        }),\n        apiClient.run({\n          service: \"work\",\n          operation: \"calculateProductivity\",\n          data: { userId: session?.user?.id, period: \"daily\" },\n        }),\n      ]);\n\n      setWorkQueue(queueData);\n      setProductivity(prodData);\n    } catch (error) {\n      console.error(\"Failed to load work data:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const startWork = async (workItem: any) => {\n    try {\n      const workSession = await apiClient.run({\n        service: \"work\",\n        operation: \"startWork\",\n        data: {\n          userId: session?.user?.id,\n          workItemId: workItem.id,\n        },\n      });\n      setActiveWork(workItem);\n      setTimer(0);\n    } catch (error) {\n      console.error(\"Failed to start work:\", error);\n    }\n  };\n\n  const stopWork = async () => {\n    try {\n      await apiClient.run({\n        service: \"work\",\n        operation: \"stopActiveWork\",\n        data: { userId: session?.user?.id },\n      });\n      setActiveWork(null);\n      setTimer(0);\n      loadWorkData(); // Refresh data\n    } catch (error) {\n      console.error(\"Failed to stop work:\", error);\n    }\n  };\n\n  const formatTime = (seconds: number) => {\n    const hours = Math.floor(seconds / 3600);\n    const minutes = Math.floor((seconds % 3600) / 60);\n    const secs = seconds % 60;\n    return `${hours}h ${minutes}m ${secs}s`;\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center h-96\">Loading...</div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto p-6 space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">My Work</h1>\n          <p className=\"text-muted-foreground\">Focus on value delivery</p>\n        </div>\n      </div>\n\n      {/* Active Work Session */}\n      {activeWork ? (\n        <Card className=\"border-primary\">\n          <CardHeader>\n            <CardTitle className=\"flex items-center justify-between\">\n              <span className=\"flex items-center gap-2\">\n                <DynamicIcon name=\"play\" className=\"h-5 w-5 text-green-500\" />\n                Current Focus\n              </span>\n              <Badge variant=\"default\">{formatTime(timer)}</Badge>\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"space-y-4\">\n            <div>\n              <h3 className=\"font-semibold text-lg\">{activeWork.title}</h3>\n              <p className=\"text-sm text-muted-foreground mt-1\">\n                {activeWork.description}\n              </p>\n            </div>\n            <div className=\"flex gap-2\">\n              <Badge>{activeWork.type}</Badge>\n              <Badge variant=\"outline\">Value: {activeWork.valueScore}/10</Badge>\n              <Badge variant=\"outline\">{activeWork.complexity}</Badge>\n            </div>\n            <div className=\"flex gap-2\">\n              <Button\n                onClick={stopWork}\n                variant=\"destructive\"\n                className=\"flex-1\"\n              >\n                <DynamicIcon name=\"pause\" className=\"h-4 w-4 mr-2\" />\n                Stop Work\n              </Button>\n              <Button\n                onClick={() => stopWork()}\n                variant=\"default\"\n                className=\"flex-1\"\n              >\n                <DynamicIcon name=\"check-circle\" className=\"h-4 w-4 mr-2\" />\n                Complete\n              </Button>\n            </div>\n          </CardContent>\n        </Card>\n      ) : (\n        <Card>\n          <CardHeader>\n            <CardTitle>Ready to Work</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <p className=\"text-muted-foreground\">\n              Select a work item below to start tracking\n            </p>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Productivity Metrics */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">Today's Progress</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {productivity?.totalHours?.toFixed(1) || 0}h\n            </div>\n            <Progress\n              value={(productivity?.totalHours / 8) * 100 || 0}\n              className=\"mt-2\"\n            />\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">Value Delivered</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              ${(productivity?.totalValue || 0).toLocaleString()}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              ROI: {productivity?.valuePerHour?.toFixed(0) || 0}/hr\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">Strategic Alignment</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {productivity?.strategicAlignment?.toFixed(0) || 0}%\n            </div>\n            <div className=\"flex items-center text-xs text-muted-foreground\">\n              <DynamicIcon name=\"target\" className=\"h-3 w-3 mr-1\" />\n              On critical path\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader className=\"pb-2\">\n            <CardTitle className=\"text-sm\">Focus Time</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\">\n              {productivity?.focusTime?.toFixed(1) || 0}h\n            </div>\n            <div className=\"flex items-center text-xs text-muted-foreground\">\n              <DynamicIcon name=\"zap\" className=\"h-3 w-3 mr-1\" />\n              Deep work\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Work Queue */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Work Queue</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <Tabs defaultValue=\"recommended\">\n            <TabsList className=\"grid w-full grid-cols-5\">\n              <TabsTrigger value=\"recommended\">Recommended</TabsTrigger>\n              <TabsTrigger value=\"critical\">Critical Path</TabsTrigger>\n              <TabsTrigger value=\"quick\">Quick Wins</TabsTrigger>\n              <TabsTrigger value=\"debt\">Tech Debt</TabsTrigger>\n              <TabsTrigger value=\"blocked\">Blocked</TabsTrigger>\n            </TabsList>\n\n            <TabsContent value=\"recommended\" className=\"space-y-3\">\n              {workQueue?.recommended?.map((item: any) => (\n                <WorkItem key={item.id} item={item} onStart={startWork} />\n              ))}\n            </TabsContent>\n\n            <TabsContent value=\"critical\" className=\"space-y-3\">\n              {workQueue?.criticalPath?.map((item: any) => (\n                <WorkItem\n                  key={item.id}\n                  item={item}\n                  onStart={startWork}\n                  critical\n                />\n              ))}\n            </TabsContent>\n\n            <TabsContent value=\"quick\" className=\"space-y-3\">\n              {workQueue?.quickWins?.map((item: any) => (\n                <WorkItem key={item.id} item={item} onStart={startWork} />\n              ))}\n            </TabsContent>\n\n            <TabsContent value=\"debt\" className=\"space-y-3\">\n              {workQueue?.techDebt?.map((item: any) => (\n                <WorkItem key={item.id} item={item} onStart={startWork} />\n              ))}\n            </TabsContent>\n\n            <TabsContent value=\"blocked\" className=\"space-y-3\">\n              {workQueue?.blocked?.map((item: any) => (\n                <WorkItem key={item.id} item={item} blocked />\n              ))}\n            </TabsContent>\n          </Tabs>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nfunction WorkItem({ item, onStart, critical, blocked }: any) {\n  return (\n    <div className=\"flex items-center justify-between p-4 rounded-lg border bg-card\">\n      <div className=\"flex-1\">\n        <div className=\"flex items-center gap-2\">\n          <h4 className=\"font-medium\">{item.title}</h4>\n          {critical && <DynamicIcon name=\"alert-circle\" className=\"h-4 w-4 text-red-500\" />}\n        </div>\n        <p className=\"text-sm text-muted-foreground mt-1\">{item.description}</p>\n        <div className=\"flex gap-2 mt-2\">\n          <Badge variant=\"outline\">{item.type}</Badge>\n          <Badge variant=\"outline\">{item.complexity}</Badge>\n          <Badge variant=\"outline\">{item.estimatedHours}h</Badge>\n          <Badge variant=\"default\">Value: {item.valueScore}</Badge>\n        </div>\n      </div>\n      <Button onClick={() => onStart(item)} disabled={blocked} size=\"sm\">\n        <DynamicIcon name=\"play\" className=\"h-4 w-4 mr-1\" />\n        Start\n      </Button>\n    </div>\n  );\n}\n\nexport default WorkDashboardPage;\n","[\r\n  {\r\n    \"id\": \"pmbook-ops\",\r\n    \"label\": \"Operations\",\r\n    \"icon\": \"layout-dashboard\",\r\n    \"order\": 0,\r\n    \"description\": \"Operations command center\",\r\n    \"group\": \"OpsManager\",\r\n    \"role\": \"Admin\",\r\n    \"children\": [\r\n      {\r\n        \"id\": \"pmbook-ops-insights\",\r\n        \"label\": \"Insights\",\r\n        \"href\": \"/ops/insights\",\r\n        \"icon\": \"eye\",\r\n        \"description\": \"Operational insights and analytics\"\r\n      },\r\n      {\r\n        \"id\": \"pmbook-ops-contracts\",\r\n        \"label\": \"Contracts\",\r\n        \"href\": \"/ops/contracts\",\r\n        \"icon\": \"file-text\",\r\n        \"description\": \"Contract management and tracking\"\r\n      },\r\n      {\r\n        \"id\": \"pmbook-ops-people\",\r\n        \"label\": \"People\",\r\n        \"href\": \"/ops/people]\",\r\n        \"icon\": \"bar-chart\",\r\n        \"description\": \"Peole management\"\r\n      },\r\n      {\r\n        \"id\": \"pmbook-ops-performance\",\r\n        \"label\": \"Performance\",\r\n        \"href\": \"/ops/performance\",\r\n        \"icon\": \"bar-chart\",\r\n        \"description\": \"Performance metrics and KPIs\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"id\": \"pmbook-execution\",\r\n    \"label\": \"Execution\",\r\n    \"icon\": \"briefcase\",\r\n    \"order\": 2,\r\n    \"description\": \"Functional area management\",\r\n    \"children\": [\r\n      {\r\n        \"id\": \"pmbook-exe-tickets\",\r\n        \"label\": \"Value Streams\",\r\n        \"href\": \"/exe/value-streams\",\r\n        \"icon\": \"check-square\",\r\n        \"description\": \"Personal work queue and tickets\"\r\n      },\r\n      {\r\n        \"id\": \"pmbook-exe-tickets\",\r\n        \"label\": \"My Tickets\",\r\n        \"href\": \"/exe/my-tickets\",\r\n        \"icon\": \"check-square\",\r\n        \"description\": \"Personal work queue and tickets\"\r\n      },\r\n      {\r\n        \"id\": \"pmbook-service-hub\",\r\n        \"label\": \"Service Hub\",\r\n        \"href\": \"/exe/service-hub\",\r\n        \"icon\": \"users\",\r\n        \"description\": \"Service catalog and team management\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n","\"use client\";\n\n// Export only page components that are in the menu structure\n// These match the config.json and app/index.ts pageRegistry\n\n// Operations pages\nexport { IntelligencePage } from \"./ops/insights/page\";\nexport { default as ContractsPage } from \"./ops/contracts/page\";\nexport { CommandCenterPage } from \"./ops/people/page\";\nexport { PerformancePage } from \"./ops/performance/page\";\n\n// Execution pages\nexport { default as ValueStreamsPage } from \"./exe/value-streams/page\";\nexport { default as MyTicketsPage } from \"./exe/my-tickets/page\";\nexport { ServicesHubPage } from \"./services/ServicesHub\";\n\n// Legacy exports (to maintain compatibility)\nexport { WorkDashboardPage } from \"./work/WorkDashboard\";\n","\"use client\";\r\n\r\n/**\r\n * @captify/pmbook - PMBook App Entry Point\r\n *\r\n * This module dynamically generates page registry from config.json menu structure\r\n * for automatic discovery by the Captify platform.\r\n */\r\n\r\nimport { ComponentType } from \"react\";\r\nimport menuConfig from \"./config.json\";\r\n\r\n// Type definitions for dynamic imports compatible with Next.js\r\nexport type NextPageComponent = ComponentType<any>;\r\nexport type PageImport = () => Promise<{ default: NextPageComponent }>;\r\nexport type PageRegistry = Record<string, PageImport>;\r\nexport type ComponentRegistry = Record<string, PageImport>;\r\n\r\n// Export individual types for external use\r\nexport type { ComponentType };\r\n\r\n// Page path mapping based on config.json structure\r\nconst PAGE_MAPPINGS: Record<string, string> = {\r\n  // Operations pages\r\n  \"/ops/insights\": \"./app/pages/ops/insights/page\",\r\n  \"/ops/contracts\": \"./app/pages/ops/contracts/page\", \r\n  \"/ops/people\": \"./app/pages/ops/people/page\",\r\n  \"/ops/performance\": \"./app/pages/ops/performance/page\",\r\n  \r\n  // Execution pages\r\n  \"/exe/value-streams\": \"./app/pages/exe/value-streams/page\",\r\n  \"/exe/my-tickets\": \"./app/pages/exe/my-tickets/page\",\r\n  \"/exe/service-hub\": \"./app/pages/services/ServicesHub\",\r\n};\r\n\r\n// Generate page registry dynamically from config.json\r\nfunction generatePageRegistry(): PageRegistry {\r\n  const registry: PageRegistry = {};\r\n  \r\n  // Add default/home page\r\n  registry.home = () => import(\"./app/pages/ops/people/page\");\r\n  registry.dashboard = () => import(\"./app/pages/ops/people/page\");\r\n  \r\n  // Process menu items recursively\r\n  function processMenuItems(items: any[], parentPath = \"\") {\r\n    items.forEach((item) => {\r\n      if (item.children) {\r\n        // Process submenu items\r\n        processMenuItems(item.children, parentPath);\r\n      } else if (item.href) {\r\n        // Map menu item to page component\r\n        const pagePath = PAGE_MAPPINGS[item.href];\r\n        if (pagePath) {\r\n          // Create registry entries for different access patterns\r\n          const cleanId = item.id.replace(\"pmbook-\", \"\").replace(/-/g, \"-\");\r\n          const hrefKey = item.href.slice(1).replace(\"/\", \"-\"); // Remove leading slash, replace / with -\r\n          \r\n          registry[cleanId] = () => import(pagePath);\r\n          registry[hrefKey] = () => import(pagePath);\r\n          registry[item.id] = () => import(pagePath);\r\n        }\r\n      }\r\n    });\r\n  }\r\n  \r\n  processMenuItems(menuConfig);\r\n  \r\n  return registry;\r\n}\r\n\r\n// Generate component registry for direct component access\r\nfunction generateComponentRegistry(): ComponentRegistry {\r\n  return {\r\n    // Operations components\r\n    IntelligencePage: () => import(\"./app/pages/ops/insights/page\"),\r\n    ContractsPage: () => import(\"./app/pages/ops/contracts/page\"),\r\n    CommandCenterPage: () => import(\"./app/pages/ops/people/page\"),\r\n    PerformancePage: () => import(\"./app/pages/ops/performance/page\"),\r\n    \r\n    // Execution components\r\n    ValueStreamsPage: () => import(\"./app/pages/exe/value-streams/page\"),\r\n    MyTicketsPage: () => import(\"./app/pages/exe/my-tickets/page\"),\r\n    ServicesHubPage: () => import(\"./app/pages/services/ServicesHub\"),\r\n    \r\n    // Legacy compatibility\r\n    WorkDashboardPage: () => import(\"./app/pages/work/WorkDashboard\"),\r\n  };\r\n}\r\n\r\n// Export the dynamically generated registries\r\nexport const pageRegistry: PageRegistry = generatePageRegistry();\r\nexport const componentRegistry: ComponentRegistry = generateComponentRegistry();\r\n\r\n// Export the menu configuration for platform use\r\nexport const menuConfiguration = menuConfig;\r\n\r\n// Export pages from the pages index\r\nexport * from \"./app/pages\";\r\n\r\n// Export client-safe types\r\nexport * from \"./types\";"],"mappings":"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","names":["useState","useEffect","apiClient","Card","CardContent","CardHeader","CardTitle","jsx","jsxs","page_exports","page_default","useEffect","useState","apiClient","useCaptify","Card","CardContent","CardHeader","CardTitle","Button","Tabs","TabsContent","TabsList","TabsTrigger","DynamicIcon","jsx","jsxs","init_page","page_exports","page_default","useEffect","useState","useCaptify","apiClient","Card","CardContent","CardHeader","CardTitle","Badge","Progress","Alert","AlertDescription","DynamicIcon","jsx","jsxs","init_page","page_exports","page_default","useEffect","useState","useCaptify","apiClient","Card","CardContent","CardHeader","CardTitle","jsx","jsxs","init_page","page_exports","page_default","useEffect","useState","useCaptify","apiClient","Card","CardContent","CardHeader","CardTitle","jsx","jsxs","init_page","page_exports","page_default","useEffect","useState","useCaptify","apiClient","Card","CardContent","jsx","jsxs","init_page","useEffect","useState","useCaptify","apiClient","Card","CardContent","CardHeader","CardTitle","Badge","Button","Input","Textarea","Select","SelectContent","SelectItem","SelectTrigger","SelectValue","Tabs","TabsContent","TabsList","TabsTrigger","DynamicIcon","jsx","jsxs","useEffect","useState","useCaptify","apiClient","Card","CardContent","CardHeader","CardTitle","Button","Badge","Progress","Tabs","TabsContent","TabsList","TabsTrigger","DynamicIcon","jsx","jsxs","init_page"]}